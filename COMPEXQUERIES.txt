1)	WRITE A SQL STATEMENT TO DISPLAY THE LOWEST PAID EMPLOYEE'S (NAME , SALARY , DEPARTMENT NAME)
	mysql> SELECT E.FIRST_NAME,E.LAST_NAME,MIN(E.SALARY),D.DEPARTMENT_NAME
        -> FROM EMPLOYEES E,DEPARTMENTS D
        -> WHERE E.DEPARTMENT_ID=D.DEPARTMENT_ID;

2)	LIST MINIMUM SALARY FOR EACH DEPARTMENT
mysql> SELECT DEPARTMENT_ID,MIN(SALARY)
       -> FROM EMPLOYEES
       -> GROUP BY DEPARTMENT_ID;

3)	WRITE A QUERY  BASED ON  FOLLOWING RESULT. 
mysql> SELECT DISTINCT E.EMPLOYEE_ID,E.FIRST_NAME,E.JOB_ID,E.SALARY,E.DEPARTMENT_ID,D.DEPARTMENT_NAME
      -> FROM EMPLOYEES E JOIN DEPARTMENTS D ON e.department_id = d.department_id
      -> WHERE e.JOB_ID LIKE '%CLERK';
4)	LIST ALL THE EMPLOYEES WHO ARE WORKING IN FORD’S DEPARTMENT.
mysql> SELECT e.employee_id,e.first_name,e.job_id,e.hire_date,e.salary,d.department_name,e.department_id
      -> FROM employees e JOIN departments d
      -> ON e.department_id=d.department_id;
5)	LIST ALL EMPLOYEE WHO ARE WORKING IN WARD'S DEPARTMENT AND
	EARNING MORE THEN MARTIN
mysql> SELECT employee_id,first_name,job_id,manager_id,hire_date,salary,department_id
      -> from employees
      -> WHERE department_id=60;
6)	DISPLAY EMPLOYEE NUMBER, NAME,DEPT NUMBER, DEPT NAME, AND LOCATION.
      SELECT e.employee_id,e.first_name,e.department_id,d.department_name,l.city FROM employees e
      ->JOIN departments AS d ON e.department_id=d.department_id
      ->JOIN
      ->location AS 1 ON d.location_id = l.location_id;
7)	DISPLAY THE FOLLOWING RESULT.
	SELECT d.department_name,d.department_id,e.first_name FROM departments d JOIN employees e ON d.department_id = e.department_id;

8)	LIST ALL THE EMPLOYEE WHO ARE WORKING IN NEW YORK
	SELECT e.first_name, e.department_id, e.department_name,l.city FROM employees e JOIN departments d ON e.department_id = d.department_id
	JOIN locations AS l ON d.location_id =l.location_id WHERE l.city LIKE oxford;

9)	WRITE A SQL STATEMENT TO DISPLAY THE LOWEST PAID EMPLOYEE'S (NAME , SALARY , DEPARTMENT NAME) IN THE RESPECTIVE DEPARTMENT
	SELECT e.first_name,MIN(e.salary),d.department_name FROM employees e JOIN departments d ON e.department_id = d.department_id
	GROUP BY d.department_name;

10)	WRITE A SQL STATEMENT TO DISPLAY THE HIGHEST PAID EMPLOYEE'S (NAME, JOB, MANAGER NAME, SALARY AND DEPARTMENT NAME AND DEPARTMENT NO.) IN THE RESPECTIVE DEPARTMENT.

      EMPNO	JOB	  MGR	MAX(SAL)	DNAME
      7698	MANAGER	  7839	2850	        SALES
      7788	ANALYST	  7566	3000	        RESEARCH
      7839	PRESIDENT       5000	        ACCOUNTING
      7902	ANALYST	  7566	3000	        RESEARCH

mysql> SELECT E.FIRST_NAME,E.JOB_ID,E.MANAGER_ID,MAX(E.SALARY),D.DEPARTMENT_NAME
     -> FROM EMPLOYEES E JOIN DEPARTMENTS D ON E.DEPARTMENT_ID = D.DEPARTMENT_ID
     -> GROUP BY D.DEPARTMENT_NAME;

11)	WRITE A SQL STATEMENT TO DISPLAY THE EMPLOYEE NAME (BOSS) AND NUMBER OF EMPLOYEE (SUBORDINATES) DIRECTLY REPORTING TO HIM?
	mysql> SELECT FIRST_NAME,MANAGER_ID,COUNT(MANAGER_ID)
    	-> FROM EMPLOYEES
    	-> GROUP BY MANAGER_ID;

12)	DISPLAY THE NAMES, DESIGNATION AND SALARIES OF ALL EMPLOYEES WHO HAVE MANAGER ALONG WITH MANAGER'S NAME, DESIGNATION AND MANAGER'S SALARY.
	(SELF-JOIN)
	mysql> SELECT E.FIRST_NAME AS NAME,E.JOB_ID AS DESIGNATION,E.SALARY,E.MANAGER_ID, M.FIRST_NAME AS MANAGER_NAME,M.JOB_ID AS DESIGNATION ,M.SALARY
	    -> FROM EMPLOYEES E
	    -> INNER JOIN EMPLOYEES M ON E.MANAGER_ID =M.EMPLOYEE_ID;


13)	CREATE THE FOLLOWING TABLES:
	ORDER: {ID, ORDERDATE, ORDERNUMBER}
	ORDER_ITEM: {ID, ORDERID, PRODUCTID, UNITPRICE, QUANTITY}
	PRODUCT: {ID, PRODUCTNAME}
	WRITE A QUERY TO DISPLAY THE FOLLOWING OUTPUT SORTED BY ORDER NO:

	ORDER_NO	ORDER_DATE	PRODUCT_NAME	QUANTITY	UNIT_PRICE
	7369	7/4/2012 12:00:00 AM	EASY-TRADING	800	20
	7900	2/10/2011 12:00:00 AM	BANK-ANYWHERE	950	30
	7934	9/23/2015 12:00:00 AM	TRIP-MANAGER	1300	10


14)	FIND THE 2ND MINIMUM SALARY OF THE EMPLOYEE.
	mysql> SELECT *
    	-> FROM EMPLOYEES
    	-> WHERE SALARY = (SELECT MIN(SALARY) FROM EMPLOYEES
    	-> WHERE SALARY > (SELECT MIN(SALARY) FROM EMPLOYEES));

15)	FIND THE MAX 3 SALARIES FROM EMPLOYEE TABLE.
	mysql> SELECT DISTINCT SALARY
    	-> FROM EMPLOYEES A
    	-> WHERE 3>= (SELECT COUNT(DISTINCT SALARY)
    	-> FROM EMPLOYEES B
    	-> WHERE B.SALARY >= A.SALARY)
    	-> ORDER BY A.SALARY DESC;

16)	DISPLAY COMMON RECORDS FROM EMP_1 & EMP_2 TABLES. (USE INTERSECT)

17)	DISPLAY DEPARTMENT NO WISE TOTAL SALARY WHERE MORE THAN 2 EMPLOYEES EXIST IN A DEPARTMENT.

	mysql> SELECT SUM(SALARY), DEPARTMENT_ID,COUNT(DEPARTMENT_ID)
    	-> FROM EMPLOYEES
    	-> GROUP BY DEPARTMENT_ID
    	-> HAVING COUNT(DEPARTMENT_ID)>2;